"use client";

import { notFound } from "next/navigation";
import { delete{{tableObj.singularPascalCase}}Action, Delete{{tableObj.singularPascalCase}}State } from "../_lib/delete-{{tableObj.singularKebabCase}}-action";
import { Button } from "@/components/ui/button";
import { startTransition, useActionState } from "react";
import { {{tableObj.singularPascalCase}} } from "@/schema/{{tableObj.pluralKebabCase}}";
import { Form, FormControl, FormMessage } from "@/components/ui/form";
import { Label } from "@/components/ui/label";

export function {{tableObj.singularPascalCase}}DeleteForm({ {{tableObj.singularCamelCase}}Row }: { {{tableObj.singularCamelCase}}Row?: {{tableObj.singularPascalCase}} }) {
  const initialState: Delete{{tableObj.singularPascalCase}}State = {};
  const [state, dispatch] = useActionState(delete{{tableObj.singularPascalCase}}Action, initialState);

  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {
    event.preventDefault();
    const formData = new FormData(event.target as HTMLFormElement);
    startTransition(() => dispatch(formData));
  }

  if (!{{tableObj.singularCamelCase}}Row && state.message) {
    return <FormMessage variant={state.status}>{state.message}</FormMessage>
  }

  if (!{{tableObj.singularCamelCase}}Row) {
    notFound();
  }

  return (
    <Form onSubmit={handleSubmit}>
      <FormControl>
        <Label htmlFor="id">Id: { {{tableObj.singularCamelCase}}Row.id }</Label>
        <input type="hidden" name="id" id="id" value={ {{tableObj.singularCamelCase}}Row.id } />
      </FormControl>
      <FormControl>
        <Button variant="destructive" type="submit">
          Delete
        </Button>
      </FormControl>
      {state.message && <FormMessage variant={state.status}>{state.message}</FormMessage>}
    </Form>
  );
}
