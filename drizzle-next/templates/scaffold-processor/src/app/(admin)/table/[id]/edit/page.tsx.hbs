import Link from "next/link";
import { notFound } from "next/navigation";
{{#if referencesColumnList.length}}
import { db } from "@/config/db";
{{/if}}
import { {{tableObj.singularPascalCase}}UpdateForm } from "../../_components/{{tableObj.singularKebabCase}}-update-form";
import { get{{tableObj.singularPascalCase}}ById } from "../../_queries/get-{{tableObj.singularKebabCase}}-by-id.query";

type Params = Promise<{ id: {{pkStrategyJsType}} }>;

export default async function Page(props: { params: Params }) {
  const params = await props.params;
  const { id } = params;
  const {{tableObj.singularCamelCase}}Obj = await get{{tableObj.singularPascalCase}}ById(id);

  if (!{{tableObj.singularCamelCase}}Obj) {
    notFound();
  }

  {{#each referencesColumnList}}
  const {{this.referenceTableVars.singularCamelCase}}List = await db.query.{{this.referenceTableVars.pluralCamelCase}}.findMany();
  {{/each}}

  return (
    <div className="flex flex-col gap-3 p-3">
      <div>Editing {{tableObj.singularCapitalCase}}</div>
      <div className="flex gap-3 [&>a]:underline">
        <Link href={`/{{tableObj.pluralKebabCase}}`}>Back</Link>
        <Link href={`/{{tableObj.pluralKebabCase}}/${ {{tableObj.singularCamelCase}}Obj.id }`}>Show</Link>
      </div>
      <div>
        <{{tableObj.singularPascalCase}}UpdateForm 
          {{tableObj.singularCamelCase}}Obj={ {{tableObj.singularCamelCase}}Obj }
          {{#each referencesColumnList}}
          {{this.referenceTableVars.singularCamelCase}}List={ {{this.referenceTableVars.singularCamelCase}}List }
          {{/each}}
        />
      </div>
    </div>
  );
}
